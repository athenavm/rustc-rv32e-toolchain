name : Build and Upload Artifacts

on:
    push:
      branches:
          - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:

      # Maximaze runner space removing preinstalled things
      # do this ONLY on ubuntu-latest
      # - name: Maximize build space
      #   if: matrix.os == 'ubuntu-latest'
      #   uses: easimon/maximize-build-space@master
      #   with:
      #     root-reserve-mb: 512
      #     swap-size-mb: 1024
      #     remove-dotnet: 'true'
      #     remove-android: 'true'
      #     remove-haskell: 'true'
      #     remove-codeql: 'true'
      #     remove-docker-images: 'true'

      # name: Conditional Step
      #   run: |
      #     if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
      #       echo "This step runs only for ubuntu-latest"
      #     elif [ "${{ matrix.os }}" == "windows-latest" ]; then
      #       echo "This step runs only for windows-latest"
      #     else
      #       echo "This step runs for other platforms"
      #     fi

      - uses: actions/checkout@v3

      # - name: Free space
      #   run: |
      #     echo "Free space:"
      #     df -h

      # # Install required packets
      # - name: Install ninja
      #   if: matrix.os == 'ubuntu-latest'
      #   run: |
      #       sudo apt update
      #       sudo apt-get -y install ninja-build

      # - name: Install ninja
      #   if: matrix.os == 'macos-latest'
      #   run: |
      #     brew install ninja
      #     # maybe needed
      #     # yes | brew install ninja

      # # Clone things
      # - name: Download Necessary sources
      #   run: ./01-clone.sh

      # # Patch things
      # - name: Apply patches
      #   run: ./02-patch.sh

      # # Build Dists
      # - name: Build dist
      #   run: ./04-build-dist.sh

      # Extract OS version and save it
      - name: Extract OS version
        run: |
          os_version=${{ matrix.os }} | cut -d '-' -f 1
          echo "OsVersion=$os_version" >> $GITHUB_ENV

      # Upload the compiled toolchain
      - name: Uplaod Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: rv32e_dist-${{ env.VersionNumber }}
          #path: rust/build/dist/dist_output.tar.gz
          path: version_number
